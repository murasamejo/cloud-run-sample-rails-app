name: cloud-run-sample

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*.*.*'
  workflow_dispatch:

env:
  # TODO: Git のタグを取得して、イメージのタグにする
  DOCKER_IMAGE: asia-northeast1-docker.pkg.dev/${{ secrets.CLOUD_RUN_PROJECT }}/cloud-run-source-deploy/cloud-run-sample-rails-app
  GCP_REGION: ${{ secrets.CLOUD_RUN_REGION }}
  RAILS_ENV: test
  PG_HOST_TEST: localhost
  PG_PORT_TEST: 5432
  PG_USER_TEST: postgres_user
  PG_PASS_TEST: postgres_password

jobs:
  rails_app_test:
    name: Rails アプリのテスト
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ["3.1.2"]
    services:
      postgres:
        image: postgres:15.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: コードをチェックアウトする
      uses: actions/checkout@v3
    - name: Ruby のセットアップを行う
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    - name: データベースをセットアップする
      run: |
        bin/rails db:prepare
        bin/rails db:seed
    - name: RSpec を実行する
      run: |
        bundle exec rspec

  deploy_to_cloud_run:
    needs: rails_app_test
    if: ${{ github.ref_name == 'main' }}
    name: Cloud Run に production デプロイする
    runs-on: ubuntu-latest
    steps:
      - name: ソースコードをチェックアウトする
        uses: actions/checkout@v3
      - name: GCP の認証を行う
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}
      - name: GCP の CLI の認証を行う
        run: |
          gcloud auth configure-docker asia-northeast1-docker.pkg.dev
      - name: Docker イメージ をビルドする
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
      - name: Docker イメージ をプッシュする
        run: |
          docker push ${{ env.DOCKER_IMAGE }}
      - name: データベースのマイグレーションを行う
        env:
          RAILS_ENV: production
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          PG_HOST_PRODUCTION: ${{ secrets.PG_HOST_PRODUCTION }}
          PG_PORT_PRODUCTION: ${{ secrets.PG_PORT_PRODUCTION }}
          PG_USER_PRODUCTION: ${{ secrets.PG_USER_PRODUCTION }}
          PG_PASS_PRODUCTION: ${{ secrets.PG_PASS_PRODUCTION }}
        run: |
          docker run --rm -e RAILS_ENV -e RAILS_MASTER_KEY -e PG_HOST_PRODUCTION -e PG_PORT_PRODUCTION -e PG_USER_PRODUCTION -e PG_PASS_PRODUCTION ${{ env.DOCKER_IMAGE }} bin/rails db:create db:migrate db:seed
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: cloud-run-sample-rails-app
          image: ${{ env.DOCKER_IMAGE }}
          region: ${{ env.GCP_REGION }}
